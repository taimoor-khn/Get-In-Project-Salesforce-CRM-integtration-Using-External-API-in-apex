//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class EventResponseId {

	public class Event {
		public Integer id {get;set;} 
		public Integer status {get;set;} 
		public Integer user_id {get;set;} 
		public String created_at {get;set;} 
		public String last_update {get;set;} 

		public Event(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'id') {
							id = parser.getIntegerValue();
						} else if (text == 'status') {
							status = parser.getIntegerValue();
						} else if (text == 'user_id') {
							user_id = parser.getIntegerValue();
						} else if (text == 'created_at') {
							created_at = parser.getText();
						} else if (text == 'last_update') {
							last_update = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Event consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Event_data {
		public Integer rates {get;set;} 
		public Integer views {get;set;} 
		public Integer shares {get;set;} 
		public Object google_analytics_ua {get;set;} 
		public Object google_leads {get;set;} 
		public String marketing_contact {get;set;} 
		public String phone_country_code {get;set;} 
		public String contact_email {get;set;} 
		public Object contact_facebook {get;set;} 

		public Event_data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'rates') {
							rates = parser.getIntegerValue();
						} else if (text == 'views') {
							views = parser.getIntegerValue();
						} else if (text == 'shares') {
							shares = parser.getIntegerValue();
						} else if (text == 'google_analytics_ua') {
							google_analytics_ua = parser.readValueAs(Object.class);
						} else if (text == 'google_leads') {
							google_leads = parser.readValueAs(Object.class);
						} else if (text == 'marketing_contact') {
							marketing_contact = parser.getText();
						} else if (text == 'phone_country_code') {
							phone_country_code = parser.getText();
						} else if (text == 'contact_email') {
							contact_email = parser.getText();
						} else if (text == 'contact_facebook') {
							contact_facebook = parser.readValueAs(Object.class);
						} else {
							System.debug(LoggingLevel.WARN, 'Event_data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Event_info {
		public String title {get;set;} 
		public Object location_desc {get;set;} 
		public String description {get;set;} 
		public String url_friendly {get;set;} 
		public String location_cords {get;set;} 
		public String address {get;set;} 
		public Integer show_map {get;set;} 
		public Integer min_age {get;set;} 
		public Integer age_display {get;set;} 
		public Integer privacy {get;set;} 
		public Integer purchase_validation {get;set;} 
		public Integer birthday_validation {get;set;} 
		public Integer facebook_validation {get;set;} 
		public Integer purchase_type {get;set;} 
		public String start_date {get;set;} 
		public String end_date {get;set;} 
		public String currency_Z {get;set;} // in json: currency
		public Object counter_title {get;set;} 
		public Integer counter_title_type {get;set;} 
		public String lat {get;set;} 
		public String lon {get;set;} 
		public String time_zone {get;set;} 
		public Integer gender {get;set;} 
		public Integer id_number {get;set;} 
		public Integer getin_subscription {get;set;} 
		public String ticket_time_zone {get;set;} 
		public Integer accept_crypto_payment {get;set;} 
		public Integer custom_instagram_url {get;set;} 

		public Event_info(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'title') {
							title = parser.getText();
						} else if (text == 'location_desc') {
							location_desc = parser.readValueAs(Object.class);
						} else if (text == 'description') {
							description = parser.getText();
						} else if (text == 'url_friendly') {
							url_friendly = parser.getText();
						} else if (text == 'location_cords') {
							location_cords = parser.getText();
						} else if (text == 'address') {
							address = parser.getText();
						} else if (text == 'show_map') {
							show_map = parser.getIntegerValue();
						} else if (text == 'min_age') {
							min_age = parser.getIntegerValue();
						} else if (text == 'age_display') {
							age_display = parser.getIntegerValue();
						} else if (text == 'privacy') {
							privacy = parser.getIntegerValue();
						} else if (text == 'purchase_validation') {
							purchase_validation = parser.getIntegerValue();
						} else if (text == 'birthday_validation') {
							birthday_validation = parser.getIntegerValue();
						} else if (text == 'facebook_validation') {
							facebook_validation = parser.getIntegerValue();
						} else if (text == 'purchase_type') {
							purchase_type = parser.getIntegerValue();
						} else if (text == 'start_date') {
							start_date = parser.getText();
						} else if (text == 'end_date') {
							end_date = parser.getText();
						} else if (text == 'currency') {
							currency_Z = parser.getText();
						} else if (text == 'counter_title') {
							counter_title = parser.readValueAs(Object.class);
						} else if (text == 'counter_title_type') {
							counter_title_type = parser.getIntegerValue();
						} else if (text == 'lat') {
							lat = parser.getText();
						} else if (text == 'lon') {
							lon = parser.getText();
						} else if (text == 'time_zone') {
							time_zone = parser.getText();
						} else if (text == 'gender') {
							gender = parser.getIntegerValue();
						} else if (text == 'id_number') {
							id_number = parser.getIntegerValue();
						} else if (text == 'getin_subscription') {
							getin_subscription = parser.getIntegerValue();
						} else if (text == 'ticket_time_zone') {
							ticket_time_zone = parser.getText();
						} else if (text == 'accept_crypto_payment') {
							accept_crypto_payment = parser.getIntegerValue();
						} else if (text == 'custom_instagram_url') {
							custom_instagram_url = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Event_info consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public Event event {get;set;} 
		public Event_data event_data {get;set;} 
		public Event_info event_info {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'event') {
							event = new Event(parser);
						} else if (text == 'event_data') {
							event_data = new Event_data(parser);
						} else if (text == 'event_info') {
							event_info = new Event_info(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Data data {get;set;} 

	public EventResponseId(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = new Data(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'EventResponseId consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static EventResponseId parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new EventResponseId(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	








}